"""
Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is
minimised; what is the value of D?
"""
from itertools import permutations
from math import sqrt


def is_pentagonal(x):
    """Solve Pn=n(3n-1)/2 for n; if it's an integer, the number is pentagonal"""
    n = (1 + sqrt(1 + 24 * x)) / 6
    return n.is_integer()

if __name__ == '__main__':
    pentagonal_numbers = [n * (3 * n - 1) // 2 for n in range(3, 3000)]

    for Px, Pj in permutations(pentagonal_numbers, 2):
        Pk = Px + Pj
        if not is_pentagonal(Pk):
            continue
        Py = Pj + Pk
        if is_pentagonal(Py):
            print(Px)
            break
